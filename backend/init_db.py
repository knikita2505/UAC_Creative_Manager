#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase
"""

import asyncio
import sys
from pathlib import Path
from database import db_manager
from config import SUPABASE_URL, SUPABASE_KEY

async def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö UAC Creative Manager...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
        print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...")
        print(f"   URL: {SUPABASE_URL}")
        print(f"   Key: {SUPABASE_KEY[:20]}...")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        print("üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
        await db_manager.create_default_roles()
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        roles = await db_manager.get_roles()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ä–æ–ª–µ–π: {len(roles)}")
        for role in roles:
            print(f"   - {role['name']}: {role['description']}")
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        await db_manager.create_log(
            "database_initialized",
            {"message": "Database initialized successfully", "roles_count": len(roles)}
        )
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)

async def test_connections():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")
    
    try:
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π
        roles = await db_manager.get_roles()
        print(f"‚úÖ –†–æ–ª–∏: {len(roles)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–∞–ª–æ–∫
        modals = await db_manager.get_modal_images()
        print(f"‚úÖ –ú–æ–¥–∞–ª–∫–∏: {len(modals)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤
        templates = await db_manager.get_templates()
        print(f"‚úÖ –®–∞–±–ª–æ–Ω—ã: {len(templates)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–æ–∫
        uploads = await db_manager.get_uploads()
        print(f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∏: {len(uploads)} –∑–∞–ø–∏—Å–µ–π")
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {e}")
        sys.exit(1)

if __name__ == "__main__":
    print("üéØ UAC Creative Manager - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    asyncio.run(init_database())
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    asyncio.run(test_connections())
    
    print("\nüéâ –ì–æ—Ç–æ–≤–æ! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
